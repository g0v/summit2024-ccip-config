# The Caddyfile is an easy way to configure your Caddy web server.
#
# Unless the file starts with a global options block, the first
# uncommented line is always the address of your site.
#
# To use your own domain name (with automatic HTTPS), first make
# sure your domain's A/AAAA DNS records are properly pointed to
# this machine's public IP, then replace ":80" below with your
# domain name.

(cors) {
    @cors_preflight{args.0} method OPTIONS
    @cors{args.0} header Origin {args.0}

    handle @cors_preflight{args.0} {
        header {
            Access-Control-Allow-Origin "{args.0}"
            Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
            Access-Control-Allow-Headers *
            Access-Control-Max-Age "3600"
            defer
        }
        respond "" 204
    }

    handle @cors{args.0} {
        header {
            Access-Control-Allow-Origin "{args.0}"
            Access-Control-Expose-Headers *
            defer
        }
    }
}

http://opass.g0v.tw {
    redir https://opass.g0v.tw{uri}
    redir / https://opass.g0v.tw/
}

https://opass.g0v.tw {
    # Set this path to your site's directory.
    root * /usr/share/caddy

    # Enable the static file server.
    file_server

    # Another common task is to set up a reverse proxy
    # reverse_proxy localhost:8080

    # Or serve a PHP site through php-fpm:
    # php_fastogi localhost: 9000

    redir / https://summit.g0v.tw/

    @announcement {
        method POST
        path /announcement
    }
    abort @announcement

    reverse_proxy 127.0.0.1:5000

    import cors https://summit.opass.app
}

# Refer to the Caddy docs for more information:
# https://caddyserver.com/docs/caddyfile
